version: '3.8'

services:
  db:
    container_name: utsav_db
    image: postgres:15
    environment:
      - POSTGRES_DB=lmss
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=abc123
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      app_network:
        ipv4_address: 172.40.0.2

  backend:
    container_name: utsav_backend
    build:
      context: ..
      dockerfile: DevOps/Dockerfile.backend
    ports:
      - "5004:8000"
    volumes:
      - ../LMS:/LMS
    environment:
      - DB_NAME=lmss
      - DB_USER=postgres
      - DB_PASSWORD=abc123
      - DB_HOST=db
      - DB_PORT=5432
      - DJANGO_SETTINGS_MODULE=mylibrary.settings
    depends_on:
      db:
        condition: service_healthy
    networks:
      app_network:
        ipv4_address: 172.40.0.3
    command: >
      sh -c "export PYTHONPATH=/LMS:$PYTHONPATH && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"

  frontend:
    container_name: utsav_frontend
    build:
      context: ..
      dockerfile: DevOps/Dockerfile.frontend
    ports:
      - "5005:80"
    depends_on:
      backend:
        condition: service_started
    networks:
      app_network:
        ipv4_address: 172.40.0.4

  nginx:
    container_name: nginx_Utsav
    image: nginx:latest
    ports:
      - "5006:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      backend:
        condition: service_started
      frontend:
        condition: service_started
    networks:
      app_network:
        ipv4_address: 172.40.0.5

networks:
  app_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.40.0.0/16

volumes:
  pgdata: